name: CI (linux/macOS)

on: [push]

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE:   Release
  CONFIG_GLOBAL: 
  CONFIG_LINUX:  -DWITH_MAGICK=true -DWITH_GMP=true -DWITH_FFTW3=true -DWARNING_AS_ERROR=ON -DWITH_HDF5=true -DWITH_QGLVIEWER=true -DWITH_CAIRO=true  -DWITH_EIGEN=true -DDGTAL_ENABLE_FLOATING_POINT_EXCEPTIONS=true
  CONFIG_MAC:    -DWITH_EIGEN=true -DWITH_GMP=tue


jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: true
      matrix:
        os: [ubuntu-latest, macOS-latest]

    steps:
     - uses: actions/checkout@v2

     - name: Install linux deps
       if: matrix.os == 'ubuntu-latest'
       run: | 
           sudo apt-get update
           sudo apt-get install libqglviewer-dev-qt5 libboost-dev libeigen3-dev ninja-build libhdf5-serial-dev libboost-dev libcairo2-dev libgmp-dev libgraphicsmagick++1-dev libfftw3-dev

     - name: Install macOS deps
       if: matrix.os == 'macOS-latest'
       run: brew install boost ninja eigen gmp

     - name: Create Build Environment
       run: cmake -E make_directory ${{runner.workspace}}/build

     
     - name: DGtalBuild (linux)
       if: matrix.os == 'ubuntu-latest'
       shell: bash
       working-directory: ${{runner.workspace}}/build
       run: |
           git clone --depth 1 https://github.com/DGtal-team/DGtal.git
           cd DGtal
           mkdir buildDGtal
           cd buildDGtal
           echo  cmake .. $CONFIG_LINUX -DBUILD_EXAMPLES=false -DBUILD_TESTING=false  -G Ninja
           cmake .. $CONFIG_LINUX -DBUILD_EXAMPLES=false -DBUILD_TESTING=false  -G Ninja
           ninja

     - name: DGtalBuild (macOS)
       if: matrix.os == 'macOS-latest'
       shell: bash
       working-directory: ${{runner.workspace}}/build
       run: |
           git clone --depth 1 https://github.com/DGtal-team/DGtal.git
           cd DGtal
           mkdir buildDGtal
           cd buildDGtal
           echo  cmake .. $CONFIG_MAC -DBUILD_EXAMPLES=false -DBUILD_TESTING=false  -G Ninja
           cmake .. $CONFIG_MAC -DBUILD_EXAMPLES=false -DBUILD_TESTING=false  -G Ninja
           ninja

     - name: Configure CMake (linux)
       if: matrix.os == 'ubuntu-latest'
       shell: bash
       working-directory: ${{runner.workspace}}/build
       run: cmake $GITHUB_WORKSPACE  -DDGtal_DIR=${{runner.workspace}}/build/DGtal/buildDGtal -DCMAKE_BUILD_TYPE=$BUILD_TYPE $CONFIG_GLOBAL $CONFIG_LINUX -G Ninja
       
     - name: Configure CMake (macOS)
       if: matrix.os == 'macOS-latest'
       shell: bash
       working-directory: ${{runner.workspace}}/build
       run: cmake $GITHUB_WORKSPACE  -DDGtal_DIR=${{runner.workspace}}/build/DGtal/buildDGtal -DCMAKE_BUILD_TYPE=$BUILD_TYPE $CONFIG_GLOBAL $CONFIG_MAC -G Ninja

     - name: Build
       working-directory: ${{runner.workspace}}/build
       shell: bash
       # Execute the build.  You can specify a specific target with "--target <NAME>"
       run: cmake --build . --config $BUILD_TYPE  
